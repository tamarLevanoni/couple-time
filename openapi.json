{
  "openapi": "3.0.1",
  "info": {
    "title": "Game Rental System API",
    "description": "Complete API for managing game rentals across multiple centers",
    "version": "1.0",
    "contact": {
      "name": "Game Rental System",
      "email": "support@gamerental.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://api.gamerental.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Public",
      "description": "Public endpoints (no authentication required)"
    },
    {
      "name": "Authentication",
      "description": "User registration and login"
    },
    {
      "name": "User",
      "description": "User profile and rental management"
    },
    {
      "name": "Coordinator",
      "description": "Center coordinator operations"
    },
    {
      "name": "Super Coordinator",
      "description": "Multi-center oversight"
    },
    {
      "name": "Admin",
      "description": "System administration"
    }
  ],
  "paths": {
    "/api/public/games": {
      "get": {
        "tags": ["Public"],
        "summary": "Browse game catalog",
        "description": "View all available games in the system (US-1.1)",
        "responses": {
          "200": {
            "description": "List of games",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameForPublic"
                  }
                },
                "example": [
                  {
                    "id": "game123",
                    "name": "Love Language Discovery Cards",
                    "description": "Interactive card game to discover your partner's love language",
                    "categories": ["INTIMACY", "COMMUNICATION"],
                    "targetAudiences": ["MARRIED"],
                    "imageUrl": "https://example.com/images/love-cards.jpg"
                  },
                  {
                    "id": "game456",
                    "name": "Communication Quest",
                    "description": "Board game focused on improving couple communication",
                    "categories": ["COMMUNICATION", "FUN"],
                    "targetAudiences": ["MARRIED", "GENERAL"],
                    "imageUrl": "https://example.com/images/comm-quest.jpg"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/public/centers": {
      "get": {
        "tags": ["Public"],
        "summary": "Find nearby centers",
        "description": "View all active centers with available games (US-1.2)",
        "responses": {
          "200": {
            "description": "List of centers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CenterForPublic"
                  }
                },
                "example": [
                  {
                    "id": "center123",
                    "name": "Jerusalem Community Center",
                    "city": "Jerusalem",
                    "area": "JERUSALEM",
                    "location": { "lat": 31.7683, "lng": 35.2137 },
                    "coordinator": {
                      "id": "user123",
                      "name": "Sarah Cohen",
                      "email": "sarah@example.com",
                      "phone": "050-1234567"
                    },
                    "gameInstances": [
                      {
                        "id": "instance123",
                        "gameId": "game123",
                        "status": "AVAILABLE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/auth/register/google": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register with Google OAuth",
        "description": "Create new user account using Google authentication (US-1.3)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterWithGoogleRequest"
              },
              "example": {
                "googleId": "google_oauth_id_123",
                "name": "John Doe",
                "email": "john@example.com",
                "phone": "050-1234567"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register/email": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register with email/password",
        "description": "Create new user account using email and password (US-1.3)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterWithEmailRequest"
              },
              "example": {
                "name": "John Doe",
                "email": "john@example.com",
                "phone": "050-1234567",
                "password": "SecurePassword123!"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContactInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login/google": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login with Google OAuth",
        "description": "Authenticate user with Google OAuth and return profile with active rentals",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithGoogleRequest"
              },
              "example": {
                "googleId": "google_oauth_id_123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileWithRentals"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "user123",
                    "name": "John Doe",
                    "email": "john@example.com",
                    "phone": "050-1234567",
                    "roles": ["USER"],
                    "isActive": true,
                    "currentRentals": [
                      {
                        "id": "rental123",
                        "status": "ACTIVE",
                        "borrowDate": "2023-12-01T00:00:00Z",
                        "expectedReturnDate": "2023-12-15T00:00:00Z",
                        "gameInstances": [
                          {
                            "id": "instance123",
                            "gameId": "game123",
                            "centerId": "center123"
                          }
                        ],
                        "center": {
                          "id": "center123",
                          "name": "Jerusalem Community Center",
                          "city": "Jerusalem",
                          "area": "JERUSALEM",
                          "coordinator": {
                            "id": "coord123",
                            "name": "Sarah Cohen",
                            "email": "sarah@example.com",
                            "phone": "050-1234567"
                          },
                          "gameInstances": []
                        },
                        "canCancel": false
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login/email": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login with email/password",
        "description": "Authenticate user with email and password and return profile with active rentals",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithEmailRequest"
              },
              "example": {
                "email": "john@example.com",
                "password": "SecurePassword123!"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileWithRentals"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "user123",
                    "name": "John Doe",
                    "email": "john@example.com",
                    "phone": "050-1234567",
                    "roles": ["USER"],
                    "isActive": true,
                    "currentRentals": []
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/test-token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Generate JWT token for API testing",
        "description": "Login with email/password and get JWT token for use in Swagger UI and API testing tools.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithEmailRequest"
              },
              "example": {
                "email": "admin@example.com",
                "password": "password123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Raw JWT token string"
                    },
                    "usage": {
                      "type": "string",
                      "description": "Instructions for using the token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {"type": "string"},
                        "email": {"type": "string"},
                        "name": {"type": "string"},
                        "roles": {
                          "type": "array",
                          "items": {"type": "string"}
                        }
                      }
                    }
                  },
                  "required": ["token", "usage", "user"]
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "usage": "Use this token in Swagger UI Authorization header as: Bearer <token>",
                  "user": {
                    "id": "user123",
                    "email": "admin@example.com",
                    "name": "Admin User",
                    "roles": ["ADMIN"]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user profile with active rentals",
        "description": "Retrieve user profile including active and pending rentals",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "User profile with active rentals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileWithRentals"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "user123",
                    "name": "John Doe",
                    "email": "john@example.com",
                    "phone": "050-1234567",
                    "roles": ["USER"],
                    "isActive": true,
                    "currentRentals": [
                      {
                        "id": "rental123",
                        "status": "PENDING",
                        "requestDate": "2023-12-01T00:00:00Z",
                        "gameInstances": [
                          {
                            "id": "instance123",
                            "gameId": "game123",
                            "centerId": "center123"
                          }
                        ],
                        "center": {
                          "id": "center123",
                          "name": "Jerusalem Community Center",
                          "city": "Jerusalem",
                          "area": "JERUSALEM",
                          "coordinator": {
                            "id": "coord123",
                            "name": "Sarah Cohen",
                            "email": "sarah@example.com",
                            "phone": "050-1234567"
                          },
                          "gameInstances": []
                        },
                        "canCancel": true
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user profile",
        "description": "Update user's personal details (US-1.6)",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileRequest"
              },
              "example": {
                "name": "John Updated",
                "phone": "050-9876543"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileWithRentals"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "user123",
                    "name": "John Updated",
                    "email": "john@example.com",
                    "phone": "050-9876543",
                    "roles": ["USER"],
                    "isActive": true,
                    "currentRentals": []
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/rentals": {
      "get": {
        "tags": ["User"],
        "summary": "View rental history",
        "description": "View returned and cancelled rentals (US-1.4). For active/pending rentals, use GET /api/user",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "ACTIVE", "RETURNED", "CANCELLED"]
            },
            "description": "Filter by rental status"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter rentals from this date (ISO 8601 format)"
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Filter rentals until this date (ISO 8601 format)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of rental history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalForUser"
                  }
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "rental456",
                      "status": "RETURNED",
                      "requestDate": "2023-11-01T00:00:00Z",
                      "borrowDate": "2023-11-02T00:00:00Z",
                      "returnDate": "2023-11-15T00:00:00Z",
                      "gameInstances": [
                        {
                          "id": "instance456",
                          "gameId": "game456",
                          "centerId": "center123"
                        }
                      ],
                      "center": {
                        "id": "center123",
                        "name": "Jerusalem Community Center",
                        "city": "Jerusalem",
                        "area": "JERUSALEM",
                        "coordinator": {
                          "id": "coord123",
                          "name": "Sarah Cohen",
                          "email": "sarah@example.com",
                          "phone": "050-1234567"
                        },
                        "gameInstances": []
                      },
                      "canCancel": false
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Request rental",
        "description": "Submit a new rental request (US-1.3)",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRentalRequest"
              },
              "example": {
                "centerId": "center123",
                "gameInstanceIds": ["instance123", "instance456"],
                "notes": "Looking forward to trying these games with my partner"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rental request created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "rental123",
                    "status": "PENDING",
                    "requestDate": "2023-12-01T00:00:00Z",
                    "gameInstances": [
                      {
                        "id": "instance123",
                        "gameId": "game123",
                        "centerId": "center123"
                      }
                    ],
                    "center": {
                      "id": "center123",
                      "name": "Jerusalem Community Center",
                      "city": "Jerusalem",
                      "area": "JERUSALEM",
                      "coordinator": {
                        "id": "coord123",
                        "name": "Sarah Cohen",
                        "email": "sarah@example.com",
                        "phone": "050-1234567"
                      },
                      "gameInstances": []
                    },
                    "canCancel": true,
                    "isOverdue": false,
                    "daysOverdue": 0,
                    "canReturn": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/rentals/{id}": {
      "put": {
        "tags": ["User"],
        "summary": "Cancel pending rental",
        "description": "Cancel a pending rental request (US-1.4)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Rental ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": ["cancel"]
                  }
                },
                "required": ["action"]
              },
              "example": {
                "action": "cancel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rental cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "rental123",
                    "status": "CANCELLED",
                    "requestDate": "2023-12-01T00:00:00Z",
                    "gameInstances": [
                      {
                        "id": "instance123",
                        "gameId": "game123",
                        "centerId": "center123"
                      }
                    ],
                    "center": {
                      "id": "center123",
                      "name": "Jerusalem Community Center",
                      "city": "Jerusalem",
                      "area": "JERUSALEM",
                      "coordinator": {
                        "id": "coord123",
                        "name": "Sarah Cohen",
                        "email": "sarah@example.com",
                        "phone": "050-1234567"
                      },
                      "gameInstances": []
                    },
                    "canCancel": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/coordinator": {
      "get": {
        "tags": ["Coordinator"],
        "summary": "Get coordinator dashboard",
        "description": "Complete center overview for coordinators (US-2.1)",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Coordinator dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoordinatorDashboard"
                },
                "example": {
                  "success": true,
                  "data": {
                    "center": {
                      "id": "center123",
                      "name": "Jerusalem Community Center",
                      "city": "Jerusalem",
                      "area": "JERUSALEM"
                    },
                    "superCoordinator": {
                      "name": "David Manager",
                      "phone": "050-9999999",
                      "email": "david@example.com"
                    },
                    "pendingRentals": [
                      {
                        "id": "rental123",
                        "centerId": "center123",
                        "status": "PENDING",
                        "requestDate": "2023-12-01T00:00:00Z",
                        "user": {
                          "id": "user123",
                          "name": "John Doe",
                          "email": "john@example.com",
                          "phone": "050-1234567"
                        },
                        "gameInstancesIds": ["instance123"],
                        "isOverdue": false,
                        "daysOverdue": 0,
                        "canApprove": true,
                        "canCancel": true,
                        "canReturn": false
                      }
                    ],
                    "activeRentals": [],
                    "availableGames": [
                      {
                        "id": "instance456",
                        "gameId": "game456",
                        "centerId": "center123",
                        "status": "AVAILABLE",
                        "expectedReturnDate": "2023-12-15T00:00:00Z",
                        "rentalsIds": []
                      }
                    ],
                    "stats": {
                      "totalRentals": 15,
                      "activeRentals": 3,
                      "overdueRentals": 1,
                      "totalGames": 20
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/coordinator/rentals": {
      "get": {
        "tags": ["Coordinator"],
        "summary": "View center rentals",
        "description": "View rentals with filters for the managed center (US-2.3)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "ACTIVE", "RETURNED", "CANCELLED"]
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of center rentals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "rental123",
                      "centerId": "center123",
                      "status": "ACTIVE",
                      "borrowDate": "2023-12-01T00:00:00Z",
                      "expectedReturnDate": "2023-12-15T00:00:00Z",
                      "user": {
                        "id": "user123",
                        "name": "John Doe",
                        "email": "john@example.com",
                        "phone": "050-1234567"
                      },
                      "gameInstancesIds": ["instance123"],
                      "isOverdue": false,
                      "daysOverdue": 0,
                      "canApprove": false,
                      "canCancel": false,
                      "canReturn": true
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Coordinator"],
        "summary": "Create manual rental",
        "description": "Create rental manually by coordinator (US-2.5)",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManualRentalRequest"
              },
              "example": {
                "userId": "user123",
                "centerId": "center123",
                "gameInstanceIds": ["instance123"],
                "borrowDate": "2023-12-01T00:00:00Z",
                "expectedReturnDate": "2023-12-15T00:00:00Z",
                "notes": "Manual rental created by coordinator"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Manual rental created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/coordinator/rentals/{id}": {
      "put": {
        "tags": ["Coordinator"],
        "summary": "Update rental status",
        "description": "Update rental status (approve, return, etc.) (US-2.2, US-2.3)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRentalRequest"
              },
              "example": {
                "action": "approve",
                "borrowDate": "2023-12-01T00:00:00Z",
                "expectedReturnDate": "2023-12-15T00:00:00Z",
                "notes": "Approved by coordinator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rental status updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/coordinator/games": {
      "get": {
        "tags": ["Coordinator"],
        "summary": "View center games",
        "description": "View all game instances in the managed center",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of center games",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "instance123",
                      "gameId": "game123",
                      "centerId": "center123",
                      "status": "AVAILABLE",
                      "expectedReturnDate": "2023-12-15T00:00:00Z",
                      "notes": "Game in good condition",
                      "rentalsIds": []
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Coordinator"],
        "summary": "Add game to center",
        "description": "Add a new game instance to the center (US-2.4)",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGameToCenterRequest"
              },
              "example": {
                "gameId": "game123",
                "status": "AVAILABLE",
                "notes": "New game added to inventory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Game added to center",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/coordinator/games/{id}": {
      "put": {
        "tags": ["Coordinator"],
        "summary": "Update game status",
        "description": "Update game instance status and notes",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": ["mark_unavailable", "mark_available"]
                  },
                  "notes": {
                    "type": "string"
                  }
                },
                "required": ["action"]
              },
              "example": {
                "action": "mark_unavailable",
                "notes": "Game damaged, needs repair"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Game status updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/coordinator/stats": {
      "get": {
        "tags": ["Coordinator"],
        "summary": "View center statistics",
        "description": "Get center performance statistics (US-2.6)",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Center statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "totalRentals": 150,
                    "activeRentals": 12,
                    "returnedRentals": 130,
                    "overdueRentals": 3,
                    "totalGames": 25,
                    "availableGames": 20,
                    "popularGames": [
                      {
                        "gameId": "game123",
                        "gameName": "Love Language Cards",
                        "rentalCount": 45
                      }
                    ],
                    "overduePercentage": 2.5,
                    "averageRentalDays": 12.5
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/super/centers": {
      "get": {
        "tags": ["Super Coordinator"],
        "summary": "Supervise centers",
        "description": "View all supervised centers with stats (US-3.1)",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of supervised centers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "center123",
                      "name": "Jerusalem Community Center",
                      "city": "Jerusalem",
                      "area": "JERUSALEM",
                      "isActive": true,
                      "coordinator": {
                        "id": "coord123",
                        "name": "Sarah Cohen",
                        "phone": "050-1234567",
                        "email": "sarah@example.com"
                      },
                      "stats": {
                        "totalGames": 25,
                        "pendingRentals": 3,
                        "activeRentals": 8,
                        "overdueRentals": 1
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/super/rentals": {
      "get": {
        "tags": ["Super Coordinator"],
        "summary": "Cross-center rental management",
        "description": "View rentals across all supervised centers (US-3.2, US-3.3)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "centerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "ACTIVE", "RETURNED", "CANCELLED"]
            }
          },
          {
            "name": "overdueOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of rentals across centers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "rental123",
                      "status": "ACTIVE",
                      "requestDate": "2023-12-01T00:00:00Z",
                      "borrowDate": "2023-12-02T00:00:00Z",
                      "expectedReturnDate": "2023-12-16T00:00:00Z",
                      "user": {
                        "id": "user123",
                        "name": "John Doe",
                        "phone": "050-1234567",
                        "email": "john@example.com"
                      },
                      "center": {
                        "id": "center123",
                        "name": "Jerusalem Community Center",
                        "city": "Jerusalem"
                      },
                      "gameInstances": [
                        {
                          "id": "instance123",
                          "gameId": "game123",
                          "game": {
                            "id": "game123",
                            "name": "Love Language Cards"
                          }
                        }
                      ],
                      "isOverdue": false,
                      "daysOverdue": 0
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/super/rentals/{id}": {
      "put": {
        "tags": ["Super Coordinator"],
        "summary": "Update rental across centers",
        "description": "Update rental status across any supervised center (US-3.2)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRentalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rental updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": ["Admin"],
        "summary": "Manage users",
        "description": "View and search all users in the system (US-4.1)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search users by name or email"
          },
          {
            "name": "roles",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["USER", "CENTER_COORDINATOR", "SUPER_COORDINATOR", "ADMIN"]
              }
            },
            "description": "Filter by user roles"
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users with pagination",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of users matching the filter",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items per page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Total-Pages": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "user123",
                      "name": "John Doe",
                      "email": "john@example.com",
                      "phone": "050-1234567",
                      "roles": ["USER"],
                      "isActive": true,
                      "managedCenter": null,
                      "supervisedCenters": [],
                      "createdAt": "2023-01-01T00:00:00Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/users/{id}": {
      "put": {
        "tags": ["Admin"],
        "summary": "Update user details",
        "description": "Update user details including roles and center assignments (US-4.1)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "roles": ["CENTER_COORDINATOR"],
                "managedCenterId": "center123",
                "isActive": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/centers": {
      "get": {
        "tags": ["Admin"],
        "summary": "Manage centers",
        "description": "View all centers in the system (US-4.2)",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of centers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "center123",
                      "name": "Jerusalem Community Center",
                      "city": "Jerusalem",
                      "area": "JERUSALEM",
                      "isActive": true,
                      "coordinator": {
                        "id": "coord123",
                        "name": "Sarah Cohen",
                        "phone": "050-1234567",
                        "email": "sarah@example.com"
                      },
                      "superCoordinator": {
                        "id": "super123",
                        "name": "David Manager",
                        "phone": "050-9999999",
                        "email": "david@example.com"
                      },
                      "stats": {
                        "totalGames": 25,
                        "activeRentals": 8,
                        "totalRentals": 150
                      },
                      "createdAt": "2023-01-01T00:00:00Z"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Admin"],
        "summary": "Add new center",
        "description": "Create a new center (US-4.2)",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCenterRequest"
              },
              "example": {
                "name": "Tel Aviv Community Center",
                "city": "Tel Aviv",
                "area": "CENTER",
                "coordinatorId": "coord456",
                "superCoordinatorId": "super123",
                "location": {
                  "lat": 32.0853,
                  "lng": 34.7818
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Center created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/centers/{id}": {
      "put": {
        "tags": ["Admin"],
        "summary": "Edit center details",
        "description": "Update center information (US-4.2)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCenterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Center updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/games": {
      "get": {
        "tags": ["Admin"],
        "summary": "Global game management",
        "description": "View all games with distribution stats (US-4.3)",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "List of all games",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "game123",
                      "name": "Love Language Discovery Cards",
                      "description": "Interactive card game to discover your partner's love language",
                      "categories": ["INTIMACY", "COMMUNICATION"],
                      "targetAudiences": ["MARRIED"],
                      "imageUrl": "https://example.com/images/love-cards.jpg",
                      "totalInstances": 15,
                      "availableInstances": 12,
                      "centerDistribution": [
                        {
                          "centerId": "center123",
                          "centerName": "Jerusalem Community Center",
                          "instances": 8
                        }
                      ],
                      "createdAt": "2023-01-01T00:00:00Z"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/games/{id}": {
      "put": {
        "tags": ["Admin"],
        "summary": "Edit games",
        "description": "Update game details (US-4.3)",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Game updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/rentals": {
      "get": {
        "tags": ["Admin"],
        "summary": "System-wide rental oversight",
        "description": "View all rentals across the entire system",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "ACTIVE", "RETURNED", "CANCELLED"]
            },
            "description": "Filter by rental status"
          },
          {
            "name": "centerId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by specific center"
          },
          {
            "name": "area",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["NORTH", "CENTER", "SOUTH", "JERUSALEM", "JUDEA_SAMARIA"]
            },
            "description": "Filter by geographical area"
          },
          {
            "name": "overdueOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Show only overdue rentals"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all rentals with pagination",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of rentals matching the filter",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page": {
                "description": "Current page number",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Page-Size": {
                "description": "Number of items per page",
                "schema": {
                  "type": "integer"
                }
              },
              "X-Total-Pages": {
                "description": "Total number of pages",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                },
                "example": {
                  "success": true,
                  "data": [
                    {
                      "id": "rental123",
                      "status": "ACTIVE",
                      "requestDate": "2023-12-01T00:00:00Z",
                      "borrowDate": "2023-12-02T00:00:00Z",
                      "expectedReturnDate": "2023-12-16T00:00:00Z",
                      "user": {
                        "id": "user123",
                        "name": "John Doe",
                        "phone": "050-1234567",
                        "email": "john@example.com"
                      },
                      "center": {
                        "id": "center123",
                        "name": "Jerusalem Community Center",
                        "city": "Jerusalem",
                        "area": "JERUSALEM"
                      },
                      "gameInstances": [
                        {
                          "id": "instance123",
                          "game": {
                            "id": "game123",
                            "name": "Love Language Cards"
                          }
                        }
                      ],
                      "isOverdue": false,
                      "daysOverdue": 0
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/rentals/{id}": {
      "put": {
        "tags": ["Admin"],
        "summary": "Update any rental (admin override)",
        "description": "Admin override to update any rental status",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUpdateRentalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rental updated by admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "required": ["success"]
      },
      "GameForPublic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["COMMUNICATION", "INTIMACY", "FUN", "THERAPY", "PERSONAL_DEVELOPMENT"]
            }
          },
          "targetAudiences": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["SINGLES", "MARRIED", "GENERAL"]
            }
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "required": ["id", "name", "categories", "targetAudiences"]
      },
      "UserContactInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": ["id", "name", "email", "phone"]
      },
      "CenterForPublic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "area": {
            "type": "string",
            "enum": ["NORTH", "CENTER", "SOUTH", "JERUSALEM", "JUDEA_SAMARIA"]
          },
          "location": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "lng": {
                "type": "number"
              }
            }
          },
          "coordinator": {
            "$ref": "#/components/schemas/UserContactInfo"
          },
          "gameInstances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "gameId": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": ["AVAILABLE", "BORROWED", "UNAVAILABLE"]
                }
              },
              "required": ["id", "gameId", "status"]
            }
          }
        },
        "required": ["id", "name", "city", "area", "coordinator", "gameInstances"]
      },
      "UserProfileWithRentals": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["USER", "CENTER_COORDINATOR", "SUPER_COORDINATOR", "ADMIN"]
            }
          },
          "isActive": {
            "type": "boolean"
          },
          "currentRentals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RentalForUser"
            }
          }
        },
        "required": ["id", "name", "email", "phone", "roles", "isActive", "currentRentals"]
      },
      "RentalForUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACTIVE", "RETURNED", "CANCELLED"]
          },
          "requestDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "borrowDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "returnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedReturnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "gameInstances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "gameId": {
                  "type": "string"
                },
                "centerId": {
                  "type": "string"
                }
              },
              "required": ["id", "gameId", "centerId"]
            }
          },
          "center": {
            "$ref": "#/components/schemas/CenterForPublic"
          },
          "canCancel": {
            "type": "boolean"
          }
        },
        "required": ["id", "status", "gameInstances", "center", "canCancel"],
        "description": "Rental information for user view with computed properties"
      },
      "RentalWithDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RentalForUser"
          },
          {
            "type": "object",
            "properties": {
              "isOverdue": {
                "type": "boolean",
                "description": "Computed: true if rental is past expected return date"
              },
              "daysOverdue": {
                "type": "integer",
                "description": "Computed: number of days past expected return date"
              },
              "canReturn": {
                "type": "boolean",
                "description": "Computed: true if rental can be returned by user"
              }
            },
            "required": ["isOverdue", "daysOverdue", "canReturn"]
          }
        ],
        "description": "Extended rental information with additional computed fields"
      },
      "RentalForCoordinator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "centerId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACTIVE", "RETURNED", "CANCELLED"]
          },
          "requestDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "borrowDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "returnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expectedReturnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserContactInfo"
          },
          "gameInstanceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Computed from gameInstances relation"
          },
          "isOverdue": {
            "type": "boolean",
            "description": "Computed: true if rental is overdue"
          },
          "daysOverdue": {
            "type": "integer",
            "description": "Computed: days past expected return"
          },
          "canApprove": {
            "type": "boolean",
            "description": "Computed: true if coordinator can approve this rental"
          },
          "canCancel": {
            "type": "boolean",
            "description": "Computed: true if coordinator can cancel this rental"
          },
          "canReturn": {
            "type": "boolean",
            "description": "Computed: true if coordinator can mark as returned"
          }
        },
        "required": ["id", "centerId", "status", "user", "gameInstanceIds", "isOverdue", "daysOverdue", "canApprove", "canCancel", "canReturn"]
      },
      "GameInstanceForCoordinator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "gameId": {
            "type": "string"
          },
          "centerId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "BORROWED", "UNAVAILABLE"]
          },
          "expectedReturnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "rentalsIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Computed from rentals relation"
          }
        },
        "required": ["id", "gameId", "centerId", "status", "rentalsIds"]
      },
      "CoordinatorDashboard": {
        "type": "object",
        "properties": {
          "center": {
            "type": "object",
            "properties": {
              "id": {"type": "string"},
              "name": {"type": "string"},
              "city": {"type": "string"},
              "area": {"type": "string", "enum": ["NORTH", "CENTER", "SOUTH", "JERUSALEM", "JUDEA_SAMARIA"]}
            },
            "required": ["id", "name", "city", "area"]
          },
          "superCoordinator": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "phone": {"type": "string"},
              "email": {"type": "string"}
            },
            "nullable": true
          },
          "pendingRentals": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/RentalForCoordinator"}
          },
          "activeRentals": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/RentalForCoordinator"}
          },
          "availableGames": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/GameInstanceForCoordinator"}
          },
          "stats": {
            "type": "object",
            "properties": {
              "totalRentals": {"type": "integer"},
              "activeRentals": {"type": "integer"},
              "overdueRentals": {"type": "integer"},
              "totalGames": {"type": "integer"}
            },
            "required": ["totalRentals", "activeRentals", "overdueRentals", "totalGames"]
          }
        },
        "required": ["center", "pendingRentals", "activeRentals", "availableGames", "stats"]
      },
      "CoordinatorDashboardResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "center": {
                "type": "object",
                "properties": {
                  "id": {"type": "string"},
                  "name": {"type": "string"},
                  "city": {"type": "string"},
                  "area": {"type": "string", "enum": ["NORTH", "CENTER", "SOUTH", "JERUSALEM", "JUDEA_SAMARIA"]}
                },
                "required": ["id", "name", "city", "area"]
              },
              "superCoordinator": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "phone": {"type": "string"},
                  "email": {"type": "string"}
                },
                "nullable": true
              },
              "pendingRentals": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/RentalForCoordinator"}
              },
              "activeRentals": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/RentalForCoordinator"}
              },
              "availableGames": {
                "type": "array",
                "items": {"$ref": "#/components/schemas/GameInstanceForCoordinator"}
              },
              "stats": {
                "type": "object",
                "properties": {
                  "totalRentals": {"type": "integer"},
                  "activeRentals": {"type": "integer"},
                  "overdueRentals": {"type": "integer"},
                  "totalGames": {"type": "integer"}
                },
                "required": ["totalRentals", "activeRentals", "overdueRentals", "totalGames"]
              }
            },
            "required": ["center", "pendingRentals", "activeRentals", "availableGames", "stats"]
          }
        },
        "required": ["success", "data"]
      },
      "RegisterWithGoogleRequest": {
        "type": "object",
        "properties": {
          "googleId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": ["googleId", "name", "email", "phone"]
      },
      "RegisterWithEmailRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 8
          }
        },
        "required": ["name", "email", "phone", "password"]
      },
      "LoginWithGoogleRequest": {
        "type": "object",
        "properties": {
          "googleId": {
            "type": "string"
          }
        },
        "required": ["googleId"]
      },
      "LoginWithEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "UpdateUserProfileRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "CreateRentalRequest": {
        "type": "object",
        "properties": {
          "centerId": {
            "type": "string",
            "pattern": "^[a-z0-9]+$",
            "description": "ID of the center where games will be borrowed from"
          },
          "gameInstanceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-z0-9]+$"
            },
            "minItems": 1,
            "maxItems": 10,
            "uniqueItems": true,
            "description": "Array of unique game instance IDs to rent (all must belong to the specified center)"
          },
          "notes": {
            "type": "string",
            "maxLength": 500,
            "description": "Optional notes for the rental request"
          }
        },
        "required": ["centerId", "gameInstanceIds"],
        "additionalProperties": false,
        "description": "Request to create a new rental. All game instances must belong to the specified center."
      },
      "CreateManualRentalRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "centerId": {
            "type": "string"
          },
          "gameInstanceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "maxItems": 10
          },
          "borrowDate": {
            "type": "string",
            "format": "date-time"
          },
          "expectedReturnDate": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": ["userId", "centerId", "gameInstanceIds"]
      },
      "UpdateRentalRequest": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["approve", "cancel", "return", "extend"]
          },
          "borrowDate": {
            "type": "string",
            "format": "date-time"
          },
          "expectedReturnDate": {
            "type": "string",
            "format": "date-time"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": ["action"]
      },
      "AdminUpdateRentalRequest": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["approve", "cancel", "return", "extend", "force_return"]
          },
          "borrowDate": {
            "type": "string",
            "format": "date-time"
          },
          "expectedReturnDate": {
            "type": "string",
            "format": "date-time"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": ["action"]
      },
      "AddGameToCenterRequest": {
        "type": "object",
        "properties": {
          "gameId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["COMMUNICATION", "INTIMACY", "FUN", "THERAPY", "PERSONAL_DEVELOPMENT"]
            }
          },
          "targetAudiences": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["SINGLES", "MARRIED", "GENERAL"]
            }
          },
          "imageUrl": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["AVAILABLE", "UNAVAILABLE"]
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "CreateCenterRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "area": {
            "type": "string",
            "enum": ["NORTH", "CENTER", "SOUTH", "JERUSALEM", "JUDEA_SAMARIA"]
          },
          "coordinatorId": {
            "type": "string"
          },
          "superCoordinatorId": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "lng": {
                "type": "number"
              }
            }
          }
        },
        "required": ["name", "city", "area"]
      },
      "UpdateCenterRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "area": {
            "type": "string",
            "enum": ["NORTH", "CENTER", "SOUTH", "JERUSALEM", "JUDEA_SAMARIA"]
          },
          "coordinatorId": {
            "type": "string"
          },
          "superCoordinatorId": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "lng": {
                "type": "number"
              }
            }
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "UpdateGameRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["COMMUNICATION", "INTIMACY", "FUN", "THERAPY", "PERSONAL_DEVELOPMENT"]
            }
          },
          "targetAudiences": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["SINGLES", "MARRIED", "GENERAL"]
            }
          },
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["USER", "CENTER_COORDINATOR", "SUPER_COORDINATOR", "ADMIN"]
            }
          },
          "isActive": {
            "type": "boolean"
          },
          "managedCenterId": {
            "type": "string"
          }
        }
      },
      "UserContactInfoResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/UserContactInfo"
          }
        },
        "required": ["success", "data"]
      },
      "UserProfileWithRentalsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/UserProfileWithRentals"
          }
        },
        "required": ["success", "data"]
      },
      "RentalListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RentalForUser"
            }
          }
        },
        "required": ["success", "data"]
      },
      "GameListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameForPublic"
            }
          }
        },
        "required": ["success", "data"]
      },
      "CenterListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CenterForPublic"
            }
          }
        },
        "required": ["success", "data"]
      }
    }
  }
}